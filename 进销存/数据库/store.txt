final String table = "store";
final String column_id           = "id";
final String column_name         = "name";
final String column_sufname      = "sufname";
final String column_province     = "province";
final String column_city         = "city";
final String column_district     = "district";
final String column_address      = "address";
final String column_time         = "time";
final String column_updatetime   = "updatetime";
final String column_parented     = "parented";
final String column_state        = "state";
final String column_uid          = "uid";
final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class Store {
  	String id          ;
	String name        ;
	String sufname     ;
	String province    ;
	String city        ;
	String district    ;
	String address     ;
	String time        ;
	String updatetime  ;
	String parented    ;
	String state       ;
	String uid         ;
	String column1;
	  String column2;
	  String column3;
	  String column4;
	  String column5;
  Store();

  Store.construct1(this.id           ,
this.name         ,
this.sufname      ,
this.province     ,
this.city         ,
this.district     ,
this.address      ,
this.time         ,
this.updatetime   ,
this.parented     ,
this.state        ,
this.uid           );
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
      column_id               :  id            ,
		column_name             :  name          ,
		column_sufname          :  sufname       ,
		column_province         :  province      ,
		column_city             :  city          ,
		column_district         :  district      ,
		column_address          :  address       ,
		column_time             :  time          ,
		column_updatetime       :  updatetime    ,
		column_parented         :  parented      ,
		column_state            :  state         ,
		column_uid              :  uid            ,

      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  User.fromMap(Map<String, dynamic> map) {
    id            =map[column_id          ];
	name          =map[column_name        ];
	sufname       =map[column_sufname     ];
	province      =map[column_province    ];
	city          =map[column_city        ];
	district      =map[column_district    ];
	address       =map[column_address     ];
	time          =map[column_time        ];
	updatetime    =map[column_updatetime  ];
	parented      =map[column_parented    ];
	state         =map[column_state       ];
	uid           =map[column_uid         ];
    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}
createTable(Database db) async{
  await db.execute('create table $table('
      '$column_id              Text PRIMARY KEY,'
		'$column_name            Text,'
		'$column_sufname         Text,'
		'$column_province        Text,'
		'$column_city            Text,'
		'$column_district        Text,'
		'$column_address         Text,'
		'$column_time            Text,'
		'$column_updatetime      Text,'
		'$column_parented        Text,'
		'$column_state           Text,'
		'$column_uid             Text,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

