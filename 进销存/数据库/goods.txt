final String table = "goods";
final String column_id              ="id";
final String column_name            ="name";
final String column_img             ="img";
final String column_tid             ="tid";
final String column_code            ="code";
final String column_prevbit         ="prevbit";
final String column_sufbit          ="sufbit";
final String column_bitval          ="bitval";
final String column_price           ="price";
final String column_jprice          ="jprice";
final String column_remark          ="remark";
final String column_uid             ="uid";
final String column_minsecurity     ="minsecurity";
final String column_maxsecurity     ="maxsecurity";
final String column_historygid      ="historygid";
final String column_time            ="time";
final String column_updatetime      ="updatetime";
final String column_detail          ="detail";
final String column_state           ="state";
final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class Goods {
 String id            ;
String name          ;
blob img           ;
String tid           ;
String code          ;  
String prevbit       ;
String sufbit        ;
String bitval        ; 
double price       ;
double jprice      ;
String remark      ;
String uid         ;
int minsecurity ; 
int maxsecurity ;
String historygid  ;   
String time        ;
String updatetime  ; 
String detail      ;
int state       ; 

  String column1;
  String column2;
  String column3;
  String column4;
  String column5;
  Goods();

  Goods.construct1(this.id          ,
this.name        ,
this.img         ,
this.tid         ,
this.code        ,
this.prevbit    ,
this.sufbit     ,
this.bitval      ,
this.price       ,
this.jprice      ,
this.remark      ,
this.uid         ,
this.minsecurity ,
this.maxsecurity ,
this.historygid  ,
this.time        ,
this.updatetime  ,
this.detail      ,
this.state);
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
     column_id             : id             ,
column_name           : name           ,
column_img            : img            ,
column_tid            : tid            ,
column_code           : code            ,
column_prevbit        : prevbit       ,
column_sufbit         : sufbit         ,
column_bitval         : bitval         , 
column_price          : price        ,
column_jprice         : jprice       ,
column_remark         : remark      ,
column_uid            : uid          ,
column_minsecurity    : minsecurity  , 
column_maxsecurity    : maxsecurity  ,
column_historygid     : historygid   , 
column_time           : time         ,
column_updatetime     : updatetime   , 
column_detail         : detail       ,
column_state          : state        , 
           
      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  Goods.fromMap(Map<String, dynamic> map) {
	  id                  =map[column_id            ];
name                =map[column_name          ];
img                 =map[column_img           ];
tid                 =map[column_tid           ];
code                =map[column_code           ];
prevbit             =map[column_prevbit        ];      
sufbit              =map[column_sufbit        ]; 
bitval              =map[column_bitval        ]; 
price               =map[column_price       ]; 
jprice              =map[column_jprice      ];
remark              =map[column_remark       ];      
uid                 =map[column_uid         ]; 
minsecurity         =map[column_minsecurity ]; 
maxsecurity         =map[column_maxsecurity ]; 
historygid          =map[column_historygid  ];
time                =map[column_time        ]; 
updatetime          =map[column_updatetime  ]; 
detail              =map[column_detail      ]; 
state               =map[column_state       ];
		
    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}

createTable(Database db) async{
  await db.execute('create table $table('
      '$column_id              Text PRIMARY KEY,'
'$column_name            Text,'
'$column_img             blob,'
'$column_tid             Text,'
'$column_code            Text,'
'$column_prevbit         Text,'
'$column_sufbit          Text,'
'$column_bitval          Text,'
'$column_price           real,'
'$column_jprice          real,'
'$column_remark          Text,'
'$column_uid             Text,'
'$column_minsecurity     integer,'
'$column_maxsecurity     integer,'
'$column_historygid      Text,'
'$column_time            Text,'
'$column_updatetime      Text,'
'$column_detail          Text,'
'$column_state           integer,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

