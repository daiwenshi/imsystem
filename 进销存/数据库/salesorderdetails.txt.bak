final String table = "salesorder";
final String column_id                   ="id";
final String column_code                      ="code";
final String column_cid                        ="cid";
final String column_uid                  ="uid";
final String column_paytype              ="paytype";
final String column_remark               ="remark";
final String column_count                ="count";
final String column_price                   ="price";
final String column_Preprice                ="Preprice";
final String column_paymoney             ="paymoney";
final String column_tainmoney            ="tainmoney";
final String column_time             ="time";
final String column_updatetime       ="updatetime";
final String column_progress         ="progress";
final String column_state            ="state";
final String column_storeid           ="storeid";

final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class SalesOrder {
String id                        ;
String code                      ;
String cid                       ;
String uid                 ;
String paytype             ;  
String remark              ;
int count               ;
double price                 ; 
double Preprice              ;
double paymoney           ;
double tainmoney          ;
String time           ;
String updatetime     ; 
int progress       ;
int state          ; 
String storeid         ;

  String column1;
  String column2;
  String column3;
  String column4;
  String column5;
  SalesOrder();

  SalesOrder.construct1(this.id          ,
this.code       ,
this.cid        ,
this.uid        ,
this.paytype    ,
this.remark        ,
this.count         ,
this.price        ,
this.Preprice     ,
this.paymoney      ,
this.tainmoney     ,
this.time          ,
this.updatetime    ,
this.progress         ,
this.state            ,
this.storeid);
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
  column_id               : id                        ,
column_code             : code                     ,
column_cid              : cid                      ,
column_uid              : uid                ,
column_paytype          : paytype              ,
column_remark           : remark            ,
column_count            : count                ,
column_price            : price                  , 
column_Preprice         : Preprice             ,
column_paymoney         : paymoney           ,
column_tainmoney        : tainmoney         ,
column_time             : time          ,
column_updatetime       : updatetime    , 
column_progress         : progress      ,
column_state            : state         , 
column_storeid          : storeid        ,
			
      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  SalesOrder.fromMap(Map<String, dynamic> map) {
	id                    =map[column_id                           ];
code                  =map[column_code                         ];
cid                   =map[column_cid                          ];
uid                   =map[column_uid                    ];
paytype               =map[column_paytype                 ];
remark                =map[column_remark                  ];  
count                 =map[column_count                  ]; 
price                 =map[column_price                    ]; 
Preprice              =map[column_Preprice               ]; 
paymoney              =map[column_paymoney         ];
tainmoney             =map[column_tainmoney         ];  
time                  =map[column_time         ]; 
updatetime            =map[column_updatetime   ]; 
progress              =map[column_progress     ]; 
state                 =map[column_state        ];
storeid               =map[column_storeid       ];
		
    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}
createTable(Database db) async{
  await db.execute('create table $table('
   '$column_id                          Text PRIMARY KEY,'
'$column_code                        Text,'
'$column_cid                         Text,'
'$column_uid                   Text,'
'$column_paytype               Text,'
'$column_remark                Text,'
'$column_count                 integer,'
'$column_price                   real,'
'$column_Preprice                real,'
'$column_paymoney             real,'
'$column_tainmoney            real,'
'$column_time             Text,'
'$column_updatetime       Text,'
'$column_progress         integer,'
'$column_state            integer,'
'$column_storeid           Text,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

