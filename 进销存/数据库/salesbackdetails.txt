final String table = "salesbackdetails";
final String column_id           ="id";
final String column_sid          ="sid";
final String column_gvid         ="gvid";
final String column_uid          ="uid";
final String column_oldprice     ="oldprice";
final String column_price        ="price";
final String column_count        ="count";
final String column_state        ="state";
final String column_updatime     ="updatime";
final String column_storeid      ="storeid";
final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class SalesBackDetails {
  String id         ;  
	String sid        ;  
	String gvid       ;  
	String uid        ;  
	String oldprice   ;  
	double price      ;  
	int count      ;  
	int state      ;  
	String updatime   ;  
	String storeid    ;  
	
	
	
	
	

  String column1;
  String column2;
  String column3;
  String column4;
  String column5;
  SalesBackDetails();

  SalesBackDetails.construct1(this.id       ,
this.sid      ,
this.gvid     ,
this.uid      ,
this.oldprice ,
this.price    ,
this.count    ,
this.state    ,
this.updatime ,
this.storeid);
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
      column_id        : id          ,
			column_sid       : sid         ,
			column_gvid      : gvid        ,
			column_uid       : uid         ,
			column_oldprice  : oldprice    ,
      column_price     : price      ,       
      column_count     : count       ,      
      column_state     : state       ,
      column_updatime  : updatime    ,
      column_storeid   : storeid     ,
           
      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  SalesBackDetails.fromMap(Map<String, dynamic> map) {
	  id          =map[column_id         ]; 
sid         =map[column_sid        ]; 
gvid        =map[column_gvid       ]; 
uid         =map[column_uid        ]; 
oldprice    =map[column_oldprice   ]; 
price       =map[column_price       ];
count       =map[column_count      ]; 
state       =map[column_state      ]; 
updatime    =map[column_updatime   ]; 
storeid     =map[column_storeid    ]; 

    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}
createTable(Database db) async{
  await db.execute('create table $table('
      '$column_id           Text PRIMARY KEY,'
'$column_sid          Text,'
'$column_gvid         Text,'
'$column_uid          Text,'
'$column_oldprice     Text,'
'$column_price        real,'
'$column_count        integer,'
'$column_state        integer,'
'$column_updatime     Text,'
'$column_storeid      Text,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

