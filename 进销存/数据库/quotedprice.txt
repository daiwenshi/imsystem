final String table = "quotedprice";
final String column_id             ="id";
final String column_svid           ="svid";
final String column_cid            ="cid";
final String column_price          ="price";
final String column_time	         ="time";
final String column_updatetime     ="updatetime";
final String column_state          ="state";
final String column_uid            ="uid";
final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class QuotedPrice {
  String id           ; 
	String svid         ; 
	String cid          ; 
	double price        ; 
	String time	        ; 
	String updatetime   ; 
	int state        ; 
	String uid          ; 
	
  String column1;
  String column2;
  String column3;
  String column4;
  String column5;
  QuotedPrice();

  QuotedPrice.construct1(this.id         ,
this.svid       ,
this.cid        ,
this.price      ,
this.time	      ,
this.updatetime ,
this.state      ,
this.uid );
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
      column_id          : id            ,  
			column_svid        : svid          ,  
			column_cid         : cid           ,  
			column_price       : price         ,  
			column_time	       : time	         ,  
      column_updatetime  : updatetime   ,         
      column_state       : state         ,        
      column_uid         : uid           ,  
      
      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  QuotedPrice.fromMap(Map<String, dynamic> map) {
	 id             =map[column_id           ];
svid           =map[column_svid         ];
cid            =map[column_cid          ];
price          =map[column_price        ];
time	         =map[column_time	        ];
updatetime     =map[column_updatetime    ];      
state          =map[column_state        ]; 
uid            =map[column_uid          ];
		
    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}
createTable(Database db) async{
  await db.execute('create table $table('
      '$column_id             Text PRIMARY KEY,'
'$column_svid           Text,'
'$column_cid            Text,'
'$column_price          real,'
'$column_time	          Text,'
'$column_updatetime     Text,'
'$column_state          integer,'
'$column_uid            Text,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

