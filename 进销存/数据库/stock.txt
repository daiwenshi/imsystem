final String table = "stock";
final String column_id                    ="id";
final String column_cid                   ="cid";
final String column_code                  ="code";
final String column_sid                   ="sid";
final String column_time                  ="time";
final String column_updatetime            ="updatetime";
final String column_uid                ="uid";
final String column_state              ="state";
final String column_storeid            ="storeid";
final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class Stock {
 String id                  ;
String cid                 ;
String code                ;
String sid                 ;
String time                ;  
String updatetime          ;
String uid              ;
int state            ; 
String storeid          ;

  String column1;
  String column2;
  String column3;
  String column4;
  String column5;
  Stock();

  Stock.construct1(this.id         ,
this.cid        ,
this.code       ,
this.sid        ,
this.time       ,
this.updatetime ,
this.uid        ,
this.state      ,
this.storeid);
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
  column_id                   : id                   ,
column_cid                  : cid                  ,
column_code                 : code                 ,
column_sid                  : sid                  ,
column_time                 : time                  ,
column_updatetime           : updatetime          ,
column_uid                  : uid               ,
column_state                : state             , 
column_storeid              : storeid         ,
			
      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  Stock.fromMap(Map<String, dynamic> map) {
	id                       =map[column_id                     ];
cid                      =map[column_cid                    ];
code                     =map[column_code                   ];
sid                      =map[column_sid                    ];
time                     =map[column_time                    ];
updatetime               =map[column_updatetime              ];  
uid                      =map[column_uid                 ]; 
state                    =map[column_state               ]; 
storeid                  =map[column_storeid           ];
		
    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}
createTable(Database db) async{
  await db.execute('create table $table('
    '$column_id                    Text PRIMARY KEY,'
'$column_cid                   Text,'
'$column_code                  Text,'
'$column_sid                   Text,'
'$column_time                  Text,'
'$column_updatetime            Text,'
'$column_uid                Text,'
'$column_state              integer,'
'$column_storeid            Text,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

