final String table = "customertype";
final String column_id                  ="id";
final String column_name                ="name";
final String column_viewname            ="viewname";
final String column_agio                ="agio";
final String column_state               ="state";
final String column_time                ="time";
final String column_updatetime          ="updatetime";
final String column_uid                 ="uid";
final String column_defaulttype         ="defaulttype";
final String column_column1 = "column1";
final String column_column2 = "column2";
final String column_column3 = "column3";
final String column_column4 = "column4";
final String column_column5 = "column5";

class CustomerType {
  String id                ;
String name              ;
String viewname          ;
double agio              ;
int state             ;  
String time              ;
String updatetime        ;
String uid               ; 
int defaulttype       ;
  String column1;
  String column2;
  String column3;
  String column4;
  String column5;
  CustomerType();

  CustomerType.construct1(this.id          ,
this.name        ,
this.viewname    ,
this.agio        ,
this.state       ,
this.time        ,
this.updatetime  ,
this.uid         ,
this.defaulttype);
  Map<String, dynamic> toMap() {
    var map = <String, dynamic>{
      column_id                 : id                 ,
column_name               : name               ,
column_viewname           : viewname           ,
column_agio               : agio               ,
column_state              : state               ,
column_time               : time              ,
column_updatetime         : updatetime         ,
column_uid                : uid                , 
column_defaulttype        : defaulttype      ,
			
      column_column1: column1,
      column_column2: column2,
      column_column3: column3,
      column_column4: column4,
      column_column5: column5
    };
    if (id != null) {
      map[column_id] = id;
    }
    return map;
  }
  CustomerType.fromMap(Map<String, dynamic> map) {
	 id                      =map[column_id                   ];
name                    =map[column_name                 ];
viewname                =map[column_viewname             ];
agio                    =map[column_agio                 ];
state                   =map[column_state                 ];
time                    =map[column_time                  ];      
updatetime              =map[column_updatetime           ]; 
uid                     =map[column_uid                  ]; 
defaulttype             =map[column_defaulttype        ];	
		
    column1 = map[column_column1];
    column2 = map[column_column2];
    column3 = map[column_column3];
    column4 = map[column_column4];
    column5 = map[column_column5];
  }
}
createTable(Database db) async{
  await db.execute('create table $table('
      '$column_id                  Text PRIMARY KEY,'
'$column_name                Text,'
'$column_viewname            Text,'
'$column_agio                real,'
'$column_state               integer,'
'$column_time                Text,'
'$column_updatetime          Text,'
'$column_uid                 Text,'
'$column_defaulttype         integer,'
      '$column_column1        Text,'
      '$column_column2        Text,'
      '$column_column3        Text,'
      '$column_column4        Text,'
      '$column_column5        Text'
      ')');
}

