<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imsystem.mapper.SalesorderMapper">
	<resultMap id="BaseResultMap"
		type="com.imsystem.domain.Salesorder">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="cid" property="cid" jdbcType="VARCHAR" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="paytype" property="paytype" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="Preprice" property="preprice" jdbcType="DOUBLE" />
		<result column="paymoney" property="paymoney" jdbcType="DOUBLE" />
		<result column="tainmoney" property="tainmoney"
			jdbcType="DOUBLE" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="updatetime" property="updatetime"
			jdbcType="TIMESTAMP" />
		<result column="progress" property="progress"
			jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="storeid" property="storeid" jdbcType="VARCHAR" />
		<result column="column1" property="column1" jdbcType="VARCHAR" />
		<result column="column2" property="column2" jdbcType="VARCHAR" />
		<result column="column3" property="column3" jdbcType="VARCHAR" />
		<result column="column4" property="column4" jdbcType="VARCHAR" />
		<result column="column5" property="column5" jdbcType="VARCHAR" />
	</resultMap>
	
	<update id="updateCount">
		update salesorder set count = (SELECT SUM(s.count) FROM `salesorderdetails` AS s WHERE s.`sid` = #{id}) ,
		paymoney = (SELECT SUM(s.count * s.price) FROM `salesorderdetails` AS s WHERE s.`sid` = #{id})
		where id = #{id}
	</update>
	
	<update id="updatePregress">
		update salesorder set progress = #{zhi} where id = #{id}
	</update>
	<select id="querySalesOrder" resultMap="BaseResultMap">
		SELECT sales.`code`,(SELECT p.name FROM `paytype` AS p WHERE p.id =
		sales.`paytype`) AS column2,(SELECT NAME FROM `customer` AS c WHERE
		c.`id` = sales.cid ) AS
		column3,(SELECT id FROM `customer` AS c WHERE
		c.`id` = sales.cid ) as column5 ,sales.progress,sales.id,sales.`count`,sales.`updatetime`,sales.`paymoney`,sales.`tainmoney`,sales.preprice
		FROM `salesorder` AS sales
		LEFT JOIN `salesorderdetails` AS s ON
		s.`sid` = sales.`id`
		inner join goodsvalue as gv on gv.id = s.gvid
		inner join goods as g on g.id = gv.gid
		<where>
			<if test="true">
				and sales.storeid = #{storeid}
			</if>
			<if test="code != '' and code != null">
				and sales.code LIKE concat('%',#{code},'%')
			</if>
			<if test="column3 != null">
				and g.name LIKE concat('%',#{column3},'%')
			</if>
			<if test="progress == 0 or progress == 1 or progress == 2 ">
				and sales.progress = #{progress}
			</if>
			<if test="column1 != '' and column1 != null">
				AND sales.`updatetime` >= #{column1} AND sales.`updatetime` &lt;=
				#{column2}
			</if>
			<if test="cid != null and cid != ''">
				AND sales.cid = #{cid}
			</if>
		</where>
		GROUP BY sales.id
		order by sales.`updatetime` desc
	</select>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, code, cid, uid, paytype, remark, count, price, Preprice, paymoney,
		tainmoney,
		time, updatetime, progress, state, storeid, column1, column2, column3,
		column4, column5
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.imsystem.domain.SalesorderExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from salesorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from salesorder
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from salesorder
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.imsystem.domain.SalesorderExample">
		delete from salesorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.imsystem.domain.Salesorder">
		insert into salesorder (id, code, cid,
		uid, paytype, remark,
		count, price, Preprice,
		paymoney, tainmoney, time,
		updatetime, progress, state,
		storeid, column1, column2,
		column3, column4, column5
		)
		values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		#{cid,jdbcType=VARCHAR},
		#{uid,jdbcType=VARCHAR}, #{paytype,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{count,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE},
		#{preprice,jdbcType=DOUBLE},
		#{paymoney,jdbcType=DOUBLE}, #{tainmoney,jdbcType=DOUBLE}, #{time,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP}, #{progress,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		#{storeid,jdbcType=VARCHAR}, #{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR},
		#{column3,jdbcType=VARCHAR}, #{column4,jdbcType=VARCHAR},
		#{column5,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.imsystem.domain.Salesorder">
		insert into salesorder
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="paytype != null">
				paytype,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="count != null">
				count,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="preprice != null">
				Preprice,
			</if>
			<if test="paymoney != null">
				paymoney,
			</if>
			<if test="tainmoney != null">
				tainmoney,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="updatetime != null">
				updatetime,
			</if>
			<if test="progress != null">
				progress,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="storeid != null">
				storeid,
			</if>
			<if test="column1 != null">
				column1,
			</if>
			<if test="column2 != null">
				column2,
			</if>
			<if test="column3 != null">
				column3,
			</if>
			<if test="column4 != null">
				column4,
			</if>
			<if test="column5 != null">
				column5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=VARCHAR},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				#{count,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="preprice != null">
				#{preprice,jdbcType=DOUBLE},
			</if>
			<if test="paymoney != null">
				#{paymoney,jdbcType=DOUBLE},
			</if>
			<if test="tainmoney != null">
				#{tainmoney,jdbcType=DOUBLE},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="progress != null">
				#{progress,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				#{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				#{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				#{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				#{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				#{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				#{column5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.imsystem.domain.SalesorderExample"
		resultType="java.lang.Integer">
		select count(*) from salesorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update salesorder
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=VARCHAR},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=VARCHAR},
			</if>
			<if test="record.paytype != null">
				paytype = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.count != null">
				count = #{record.count,jdbcType=INTEGER},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.preprice != null">
				Preprice = #{record.preprice,jdbcType=DOUBLE},
			</if>
			<if test="record.paymoney != null">
				paymoney = #{record.paymoney,jdbcType=DOUBLE},
			</if>
			<if test="record.tainmoney != null">
				tainmoney = #{record.tainmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.progress != null">
				progress = #{record.progress,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.storeid != null">
				storeid = #{record.storeid,jdbcType=VARCHAR},
			</if>
			<if test="record.column1 != null">
				column1 = #{record.column1,jdbcType=VARCHAR},
			</if>
			<if test="record.column2 != null">
				column2 = #{record.column2,jdbcType=VARCHAR},
			</if>
			<if test="record.column3 != null">
				column3 = #{record.column3,jdbcType=VARCHAR},
			</if>
			<if test="record.column4 != null">
				column4 = #{record.column4,jdbcType=VARCHAR},
			</if>
			<if test="record.column5 != null">
				column5 = #{record.column5,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update salesorder
		set id = #{record.id,jdbcType=VARCHAR},
		code = #{record.code,jdbcType=VARCHAR},
		cid = #{record.cid,jdbcType=VARCHAR},
		uid = #{record.uid,jdbcType=VARCHAR},
		paytype = #{record.paytype,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		count = #{record.count,jdbcType=INTEGER},
		price = #{record.price,jdbcType=DOUBLE},
		Preprice = #{record.preprice,jdbcType=DOUBLE},
		paymoney = #{record.paymoney,jdbcType=DOUBLE},
		tainmoney = #{record.tainmoney,jdbcType=DOUBLE},
		time = #{record.time,jdbcType=TIMESTAMP},
		updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
		progress = #{record.progress,jdbcType=INTEGER},
		state = #{record.state,jdbcType=INTEGER},
		storeid = #{record.storeid,jdbcType=VARCHAR},
		column1 = #{record.column1,jdbcType=VARCHAR},
		column2 = #{record.column2,jdbcType=VARCHAR},
		column3 = #{record.column3,jdbcType=VARCHAR},
		column4 = #{record.column4,jdbcType=VARCHAR},
		column5 = #{record.column5,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.imsystem.domain.Salesorder">
		update salesorder
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				cid = #{cid,jdbcType=VARCHAR},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="paytype != null">
				paytype = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				count = #{count,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="preprice != null">
				Preprice = #{preprice,jdbcType=DOUBLE},
			</if>
			<if test="paymoney != null">
				paymoney = #{paymoney,jdbcType=DOUBLE},
			</if>
			<if test="tainmoney != null">
				tainmoney = #{tainmoney,jdbcType=DOUBLE},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="progress != null">
				progress = #{progress,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				storeid = #{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				column1 = #{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				column2 = #{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				column3 = #{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				column4 = #{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				column5 = #{column5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.imsystem.domain.Salesorder">
		update salesorder
		set code = #{code,jdbcType=VARCHAR},
		cid = #{cid,jdbcType=VARCHAR},
		uid = #{uid,jdbcType=VARCHAR},
		paytype = #{paytype,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		count = #{count,jdbcType=INTEGER},
		price = #{price,jdbcType=DOUBLE},
		Preprice = #{preprice,jdbcType=DOUBLE},
		paymoney = #{paymoney,jdbcType=DOUBLE},
		tainmoney = #{tainmoney,jdbcType=DOUBLE},
		time = #{time,jdbcType=TIMESTAMP},
		updatetime = #{updatetime,jdbcType=TIMESTAMP},
		progress = #{progress,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		storeid = #{storeid,jdbcType=VARCHAR},
		column1 = #{column1,jdbcType=VARCHAR},
		column2 = #{column2,jdbcType=VARCHAR},
		column3 = #{column3,jdbcType=VARCHAR},
		column4 = #{column4,jdbcType=VARCHAR},
		column5 = #{column5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="query" resultMap="BaseResultMap">
		SELECT SUM(sd.price) AS paymoney , SUM(sd.price) - SUM(gv.`jprice`) AS column2,DATE_FORMAT(s.time,'%Y-%m-%d') AS column3 FROM sales AS s
		INNER JOIN `salesdetails` AS sd ON s.id = sd.sid
		INNER JOIN goodsvalue AS gv ON gv.`id` = sd.gvid
		 where  s.`state` = '0'
		<if test="startTime != null and startTime != ''">
			AND s.`time` >= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
			AND s.`time` &lt;= #{endTime}
		</if>
		<if test="code != null and code != ''">
			AND s.`code` = #{code}
		</if>
		<if test="storeid != null and storeid != ''">
			AND s.`storeid` = #{storeid}
		</if>
	</select>
	<select id="queryFirst" resultMap="BaseResultMap">
		SELECT * FROM (SELECT *,SUM(paymoney) AS s FROM sales
		where `state` = '0'
		<if test="startTime != null and startTime != ''">
			AND `time` >= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
			AND `time` &lt;= #{endTime}
		</if>
		<if test="code != null and code != ''">
			AND `code` = #{code}
		</if>
		 GROUP BY
		storeid) t 
		ORDER BY t.s DESC LIMIT 1
	</select>
	<select id="queryDaysAgo" resultMap="BaseResultMap">
		SELECT SUM(sd.price) AS paymoney , SUM(sd.price) - SUM(gv.`jprice`) AS column2,COUNT(*) AS `count`,DATE_FORMAT(s.time,'%Y-%m-%d') AS column3 FROM sales AS s
		INNER JOIN `salesdetails` AS sd ON s.id = sd.sid
		INNER JOIN goodsvalue AS gv ON gv.`id` = sd.gvid
		<where>
			<if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
				s.`TIME` >= DATE_FORMAT(#{startTime},'%Y-%m-%d 00:00:00') AND s.`TIME` &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')
			</if>
			<if test="startTime == null or startTime == '' or endTime == null or endTime == ''">
				DATE_SUB(CURDATE(), INTERVAL 6 DAY) &lt;= DATE(s.`time`)
			</if>
		<if test="storeid != null and storeid != ''">
			AND s.storeid=#{storeid}
		</if>
		</where>
		GROUP BY DATE_FORMAT(s.`TIME`,'%Y-%m-%d') ORDER BY s.`TIME`
	</select>
	<select id="queryByTime" resultMap="BaseResultMap">
		SELECT t.* FROM (SELECT s.id,SUM(s.paymoney) as paymoney,COUNT(*) as `count`,SUM(s.paymoney) - SUM(gv.jprice) column2,DATE_FORMAT(s.time,'%Y-%m-%d') AS column3  FROM sales AS s 
		JOIN salesdetails AS sd ON sd.sid = s.id 
		JOIN goodsvalue AS gv ON gv.id = sd.gvid
		<where>
			<if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
				s.`TIME` >= DATE_FORMAT(#{startTime},'%Y-%m-%d 00:00:00') AND s.`TIME` &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')
			</if>
			<if test="startTime == null or startTime == '' or endTime == null or endTime == ''">
				DATE_SUB(CURDATE(), INTERVAL 6 DAY) &lt;= DATE(s.`time`)
			</if>
		<if test="storeid != null and storeid != ''">
			AND s.storeid=#{storeid}
		</if>
		</where>
		GROUP BY s.`code` ORDER BY s.TIME) AS t
	</select>
	<select id="queryOrderCountByTime" resultMap="BaseResultMap">
		SELECT COUNT(*) as 'count' FROM sales WHERE DATE_FORMAT(TIME,'%Y-%m-%d') = DATE_FORMAT(#{time},'%Y-%m-%d')
		<if test="sid != null and sid != ''">
			AND storeid = #{sid}
		</if>
	</select>
	<select id="queryRanking" resultMap="BaseResultMap">
		SELECT t.id AS id,ss.id AS storeid,ss.name AS column3,ss.sufname AS
		column4,t.s AS column5 FROM (SELECT *,SUM(paymoney) AS s FROM
		sales WHERE
		<if test="startTime != null and startTime != ''">
			`time` >= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00') AND `time` &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
		</if>
		<if test="startTime == null or startTime == ''">
			DATE_FORMAT( TIME, '%Y-%m' ) = DATE_FORMAT( CURDATE( ) , '%Y-%m' )
		</if>
		GROUP BY storeid) t JOIN store AS ss ON ss.id = t.storeid WHERE
		t.state = '0'
		<if test="storeId != null and storeId != ''">
			and t.storeid = #{storeId}
		</if>
		 ORDER BY t.s asc 
		<if test="startTime == null or startTime == ''">
			LIMIT 6
		</if>
	</select>
	<select id="queryTedayMoney" resultType="java.lang.Integer">
		SELECT SUM(paymoney) FROM sales WHERE TO_DAYS(TIME) =
		TO_DAYS(NOW())
		<if test="store != null and store != ''">
			AND storeid = #{store}
		</if>
	</select>
	<select resultMap="BaseResultMap" id="queryThisYear">
		SELECT SUM(sd.price) AS paymoney , SUM(sd.price) - SUM(gv.`jprice`) AS column2,DATE_FORMAT(s.time,'%Y-%m') AS column3 FROM sales AS s
		INNER JOIN `salesdetails` AS sd ON s.id = sd.sid
		INNER JOIN goodsvalue AS gv ON gv.`id` = sd.gvid
		WHERE DATE_FORMAT(s.time,'%Y') = #{year}
		<if test="sid != null and sid != ''">
			and s.storeid = #{sid}
		</if>
		GROUP BY DATE_FORMAT(s.time,'%Y-%m')
	</select>
</mapper>