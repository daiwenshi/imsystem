<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imsystem.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.imsystem.domain.Role" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="column1" property="column1" jdbcType="VARCHAR" />
    <result column="column2" property="column2" jdbcType="VARCHAR" />
    <result column="column3" property="column3" jdbcType="VARCHAR" />
    <result column="column4" property="column4" jdbcType="VARCHAR" />
    <result column="column5" property="column5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, time, state, uid, column1, column2, column3, column4, column5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imsystem.domain.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.imsystem.domain.RoleExample" >
    delete from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imsystem.domain.Role" >
    insert into role (id, name, time, 
      state, uid, column1, 
      column2, column3, column4, 
      column5)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{column1,jdbcType=VARCHAR}, 
      #{column2,jdbcType=VARCHAR}, #{column3,jdbcType=VARCHAR}, #{column4,jdbcType=VARCHAR}, 
      #{column5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.imsystem.domain.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="column1 != null" >
        column1,
      </if>
      <if test="column2 != null" >
        column2,
      </if>
      <if test="column3 != null" >
        column3,
      </if>
      <if test="column4 != null" >
        column4,
      </if>
      <if test="column5 != null" >
        column5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        #{column3,jdbcType=VARCHAR},
      </if>
      <if test="column4 != null" >
        #{column4,jdbcType=VARCHAR},
      </if>
      <if test="column5 != null" >
        #{column5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imsystem.domain.RoleExample" resultType="java.lang.Integer" >
    select count(*) from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.column1 != null" >
        column1 = #{record.column1,jdbcType=VARCHAR},
      </if>
      <if test="record.column2 != null" >
        column2 = #{record.column2,jdbcType=VARCHAR},
      </if>
      <if test="record.column3 != null" >
        column3 = #{record.column3,jdbcType=VARCHAR},
      </if>
      <if test="record.column4 != null" >
        column4 = #{record.column4,jdbcType=VARCHAR},
      </if>
      <if test="record.column5 != null" >
        column5 = #{record.column5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=VARCHAR},
      column1 = #{record.column1,jdbcType=VARCHAR},
      column2 = #{record.column2,jdbcType=VARCHAR},
      column3 = #{record.column3,jdbcType=VARCHAR},
      column4 = #{record.column4,jdbcType=VARCHAR},
      column5 = #{record.column5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imsystem.domain.Role" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="column1 != null" >
        column1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column2 = #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        column3 = #{column3,jdbcType=VARCHAR},
      </if>
      <if test="column4 != null" >
        column4 = #{column4,jdbcType=VARCHAR},
      </if>
      <if test="column5 != null" >
        column5 = #{column5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imsystem.domain.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR},
      column3 = #{column3,jdbcType=VARCHAR},
      column4 = #{column4,jdbcType=VARCHAR},
      column5 = #{column5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <!-- 查询所有角色 -->
  <select id="queryRoleAll" resultMap="BaseResultMap">
  	
 	 SELECT * FROM `role` WHERE state =0
    
  </select>
  
   <!-- 根据ID查询角色 -->
  <select id="queryRoleById" resultMap="BaseResultMap">
  	
 	SELECT * FROM `role` WHERE id=#{id} AND state =0
    
  </select>
  
  
  
   <update id="deleteRoleAll">
   	
	UPDATE `role` SET state=3 WHERE id IN
	<foreach collection="array" item="i" open="("  separator="," close=")">
		
		#{i}
		
	</foreach>
	
	
	
  </update>
  
  
  
  <!-- 新增角色 -->
  <insert id="insertRole">
    INSERT INTO role (id, `name`, `time`, state, uid)
    VALUES (#{id}, #{name}, now(),  0, #{uid})
  </insert>
  
  
  
 <!--  根据ID删除角色 -->
  <delete id="deleteRole">
  	
   	    UPDATE `role` SET state=#{state} WHERE id=#{id}
 
  </delete>
  
  
  <!-- 根据ID修改角色 -->
  <update id="updateRoleById">
    UPDATE role SET `name` = #{name,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR},
      column3 = #{column3,jdbcType=VARCHAR},
      column4 = #{column4,jdbcType=VARCHAR},
      column5 = #{column5,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=VARCHAR} 
  </update>
  
   
  
  <resultMap type="com.imsystem.domain.Role" id="ResultMap" extends="BaseResultMap">
		
		 <collection property="moduleList" column="id" ofType="com.imsystem.domain.Module" select="queryRoleModuleAll">
		 	     <id property="id" column="mid"/>
		 		 <result property="name" column="mname"/>
		 </collection>
	</resultMap>
  
  
  
  
  
  <!-- 查询角色模块 -->
   <select id="queryRoleModule" resultMap="ResultMap">
    
   	SELECT * FROM role 
	 <where>
	 	<if test="name!=null and name!=''">
	 	AND name LIKE CONCAT ('%',#{name},'%') 
	 	</if>
	 	AND state IN(0,1)
	 </where>
	
	 
  </select>
  
  <select id="queryRoleModuleAll" resultType="com.imsystem.domain.Module">
  	SELECT m.* FROM  `rolemodule` AS rm 
	INNER JOIN module AS m
	ON rm.mid=m.id 
	WHERE rm.rid=#{id}
	
  </select>
  
  
  
  
  
  
</mapper>