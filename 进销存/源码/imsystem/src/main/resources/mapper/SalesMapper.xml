<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imsystem.mapper.SalesMapper">
	<resultMap id="BaseResultMap"
		type="com.imsystem.domain.Sales">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="soid" property="soid" jdbcType="VARCHAR" />
		<result column="cid" property="cid" jdbcType="VARCHAR" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="paytype" property="paytype" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="paymoney" property="paymoney" jdbcType="DOUBLE" />
		<result column="tainmoney" property="tainmoney"
			jdbcType="DOUBLE" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="updatetime" property="updatetime"
			jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="storeid" property="storeid" jdbcType="VARCHAR" />
		<result column="column1" property="column1" jdbcType="VARCHAR" />
		<result column="column2" property="column2" jdbcType="VARCHAR" />
		<result column="column3" property="column3" jdbcType="VARCHAR" />
		<result column="column4" property="column4" jdbcType="VARCHAR" />
		<result column="column5" property="column5" jdbcType="VARCHAR" />
	</resultMap>

	<select id="query" resultMap="BaseResultMap">
		SELECT s.* FROM sales AS s
		inner join salesdetails as sd on sd.sid = s.id
		inner join goodsvalue as gv on gv.id = sd.gvid
		inner join goods as g on g.id = gv.gid
		<where>
			<if test="true">
				and s.storeid = #{storeid}
			</if>
			<if test="code != null and code != '' ">
				and s.code like concat('%',#{code},'%')
			</if>
			<if test="shappingname != null">
				and g.name like concat('%',#{shappingname},'%')
			</if>
			<if test="time != null and time != ''">
				AND s.`updatetime` >= #{time} AND s.`updatetime` &lt;=
				#{endTime}
			</if>
		</where>
		group by s.id
	</select>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, code, soid, cid, uid, paytype, remark, count, price, paymoney,
		tainmoney, time,
		updatetime, state, storeid, column1, column2, column3, column4, column5
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.imsystem.domain.SalesExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sales
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sales
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sales
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.imsystem.domain.SalesExample">
		delete from sales
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.imsystem.domain.Sales">
		insert into sales (id, code, soid,
		cid, uid, paytype,
		remark, count, price,
		paymoney, tainmoney, time,
		updatetime, state, storeid,
		column1, column2, column3,
		column4, column5)
		values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		#{soid,jdbcType=VARCHAR},
		#{cid,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{paytype,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
		#{price,jdbcType=DOUBLE},
		#{paymoney,jdbcType=DOUBLE}, #{tainmoney,jdbcType=DOUBLE}, #{time,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER},
		#{storeid,jdbcType=VARCHAR},
		#{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR}, #{column3,jdbcType=VARCHAR},
		#{column4,jdbcType=VARCHAR}, #{column5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.imsystem.domain.Sales">
		insert into sales
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="soid != null">
				soid,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="paytype != null">
				paytype,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="count != null">
				count,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="paymoney != null">
				paymoney,
			</if>
			<if test="tainmoney != null">
				tainmoney,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="updatetime != null">
				updatetime,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="storeid != null">
				storeid,
			</if>
			<if test="column1 != null">
				column1,
			</if>
			<if test="column2 != null">
				column2,
			</if>
			<if test="column3 != null">
				column3,
			</if>
			<if test="column4 != null">
				column4,
			</if>
			<if test="column5 != null">
				column5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="soid != null">
				#{soid,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=VARCHAR},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				#{count,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="paymoney != null">
				#{paymoney,jdbcType=DOUBLE},
			</if>
			<if test="tainmoney != null">
				#{tainmoney,jdbcType=DOUBLE},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				#{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				#{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				#{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				#{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				#{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				#{column5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.imsystem.domain.SalesExample"
		resultType="java.lang.Integer">
		select count(*) from sales
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sales
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.soid != null">
				soid = #{record.soid,jdbcType=VARCHAR},
			</if>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=VARCHAR},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=VARCHAR},
			</if>
			<if test="record.paytype != null">
				paytype = #{record.paytype,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.count != null">
				count = #{record.count,jdbcType=INTEGER},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.paymoney != null">
				paymoney = #{record.paymoney,jdbcType=DOUBLE},
			</if>
			<if test="record.tainmoney != null">
				tainmoney = #{record.tainmoney,jdbcType=DOUBLE},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.storeid != null">
				storeid = #{record.storeid,jdbcType=VARCHAR},
			</if>
			<if test="record.column1 != null">
				column1 = #{record.column1,jdbcType=VARCHAR},
			</if>
			<if test="record.column2 != null">
				column2 = #{record.column2,jdbcType=VARCHAR},
			</if>
			<if test="record.column3 != null">
				column3 = #{record.column3,jdbcType=VARCHAR},
			</if>
			<if test="record.column4 != null">
				column4 = #{record.column4,jdbcType=VARCHAR},
			</if>
			<if test="record.column5 != null">
				column5 = #{record.column5,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sales
		set id = #{record.id,jdbcType=VARCHAR},
		code = #{record.code,jdbcType=VARCHAR},
		soid = #{record.soid,jdbcType=VARCHAR},
		cid = #{record.cid,jdbcType=VARCHAR},
		uid = #{record.uid,jdbcType=VARCHAR},
		paytype = #{record.paytype,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		count = #{record.count,jdbcType=INTEGER},
		price = #{record.price,jdbcType=DOUBLE},
		paymoney = #{record.paymoney,jdbcType=DOUBLE},
		tainmoney = #{record.tainmoney,jdbcType=DOUBLE},
		time = #{record.time,jdbcType=TIMESTAMP},
		updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
		state = #{record.state,jdbcType=INTEGER},
		storeid = #{record.storeid,jdbcType=VARCHAR},
		column1 = #{record.column1,jdbcType=VARCHAR},
		column2 = #{record.column2,jdbcType=VARCHAR},
		column3 = #{record.column3,jdbcType=VARCHAR},
		column4 = #{record.column4,jdbcType=VARCHAR},
		column5 = #{record.column5,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.imsystem.domain.Sales">
		update sales
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="soid != null">
				soid = #{soid,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				cid = #{cid,jdbcType=VARCHAR},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="paytype != null">
				paytype = #{paytype,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				count = #{count,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="paymoney != null">
				paymoney = #{paymoney,jdbcType=DOUBLE},
			</if>
			<if test="tainmoney != null">
				tainmoney = #{tainmoney,jdbcType=DOUBLE},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				storeid = #{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				column1 = #{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				column2 = #{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				column3 = #{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				column4 = #{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				column5 = #{column5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.imsystem.domain.Sales">
		update sales
		set code = #{code,jdbcType=VARCHAR},
		soid = #{soid,jdbcType=VARCHAR},
		cid = #{cid,jdbcType=VARCHAR},
		uid = #{uid,jdbcType=VARCHAR},
		paytype = #{paytype,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		count = #{count,jdbcType=INTEGER},
		price = #{price,jdbcType=DOUBLE},
		paymoney = #{paymoney,jdbcType=DOUBLE},
		tainmoney = #{tainmoney,jdbcType=DOUBLE},
		time = #{time,jdbcType=TIMESTAMP},
		updatetime = #{updatetime,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=INTEGER},
		storeid = #{storeid,jdbcType=VARCHAR},
		column1 = #{column1,jdbcType=VARCHAR},
		column2 = #{column2,jdbcType=VARCHAR},
		column3 = #{column3,jdbcType=VARCHAR},
		column4 = #{column4,jdbcType=VARCHAR},
		column5 = #{column5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
		
		
		
		<select id="ChaXunJinRiZongE" resultMap="BaseResultMap">
			
			SELECT COUNT(*) AS column1,SUM(tainmoney) AS column2 FROM sales WHERE state=0 AND uid=#{id} AND TO_DAYS(`time`)=TO_DAYS(NOW())
		
		</select>
		
		
		
		
	<select resultMap="BaseResultMap" id="queryShouZhang">
		SELECT c.name AS column1 , s.paymoney AS paymoney , s.tainmoney AS
		tainmoney , s.updatetime AS TIME , c.balance AS column2 FROM sales AS
		s JOIN customer AS c ON c.id = s.cid WHERE s.tainmoney &lt; s.paymoney
		AND s.state = '0'
		<if test="cid != null and cid != ''">
			AND c.id = #{cid}
		</if>
		<if
			test="startTime != null and startTime != '' and endTime != null and endTime != ''">
			AND s.TIME >= DATE_FORMAT(#{startTime},'%Y-%m-%d 00:00:00') AND s.TIME
			&lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')
		</if>
		<if test="storeid != null and storeid != ''">
			and s.storeid = #{storeid}
		</if>

	</select>
	<select id="queryXf" resultMap="BaseResultMap">
		SELECT s.`id` AS id,SUM(s.`paymoney`) AS price ,c.`name` AS column1,c.id as cid FROM sales AS s 
			JOIN customer AS c ON c.id = s.cid
			WHERE s.state = '0' 
			<if test="sid != null and sid != ''">
				AND s.storeid = #{sid}
			</if>
			<if test="startTime != null and startTime != ''">
				AND  DATE_FORMAT(s.time,'%Y-%m-%d') >= DATE_FORMAT(#{startTime},'%Y-%m-%d') 
				AND DATE_FORMAT(s.time,'%Y-%m-%d')&lt;=DATE_FORMAT(#{endTime},'%Y-%m-%d') 
			</if>
			GROUP BY s.cid ORDER BY price DESC
	</select>
	<select id="querySalesByCid" resultMap="BaseResultMap">
		SELECT s.id FROM sales  AS s 
		JOIN salesdetails AS sd ON s.id = sd.sid 
		JOIN goodsvalue AS gv ON gv.id = sd.gvid
		WHERE s.state='0'
		<if test="cid != null and cid != ''">
			 and s.cid = #{cid}
		</if>
		<if test="startTime != null and startTime != ''">
				AND  DATE_FORMAT(s.time,'%Y-%m-%d') >= DATE_FORMAT(#{startTime},'%Y-%m-%d') 
				AND DATE_FORMAT(s.time,'%Y-%m-%d')&lt;=DATE_FORMAT(#{endTime},'%Y-%m-%d') 
			</if>
	</select>
</mapper>