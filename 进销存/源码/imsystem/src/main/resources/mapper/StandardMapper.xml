<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imsystem.mapper.StandardMapper" >
  <resultMap id="BaseResultMap" type="com.imsystem.domain.Standard" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="tid" property="tid" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="column1" property="column1" jdbcType="VARCHAR" />
    <result column="column2" property="column2" jdbcType="VARCHAR" />
    <result column="column3" property="column3" jdbcType="VARCHAR" />
    <result column="column4" property="column4" jdbcType="VARCHAR" />
    <result column="column5" property="column5" jdbcType="VARCHAR" />
    
    <collection property="stabndardValueList" ofType="com.imsystem.domain.Standardvalue" column="id" select="com.imsystem.mapper.StandardvalueMapper.queryStandardvalueByid">
    </collection>
    
  </resultMap>
  
  <select id="queryStandard" resultMap="BaseResultMap">
  	SELECT a.*, b.`name` AS gname  FROM `standard` AS a JOIN `goodstype` AS b ON a.`tid` = b.`id` 
  	<where>
  		a.state='0'
  		<if test="tiaojian!=null">
  				and a.id LIKE concat('%',#{tiaojian},'%') OR  a.NAME LIKE concat('%',#{tiaojian},'%') OR b.name LIKE concat('%',#{tiaojian},'%') OR a.uid LIKE concat('%',#{tiaojian},'%')
  		</if>
  	</where>
  </select>
  
   <insert id="insertStandard" parameterType="com.imsystem.domain.Standard" >
  	INSERT INTO standard(id,NAME,tid,TIME,updatetime,uid,state) VALUE(#{id},#{name},#{tid},NOW(),NOW(),#{uid},0)
  </insert>
  
  <update id="updatedelete">
  	UPDATE standard SET state=1 WHERE id=#{id}
  </update>
  
  <select id="queryStandardById" resultMap="BaseResultMap">
  	SELECT * FROM `standard`
	WHERE id = #{id};
  </select>

  <select id="dwsqueryStandardById" resultMap="BaseResultMap">
  	SELECT * FROM `standard`
	WHERE tid = #{id};
  </select>

  
  <select id="StandardById" resultMap="BaseResultMap">
  	SELECT * FROM `standard`
	WHERE id = #{id};
  	
  </select>
  
 <update id="toupdate">
 	UPDATE standard SET NAME=#{name},tid=#{tid},updatetime=NOW() WHERE id=#{id} 	
 </update>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, tid, time, updatetime, uid, state, column1, column2, column3, column4, 
    column5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imsystem.domain.StandardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from standard
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from standard
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.imsystem.domain.StandardExample" >
    delete from standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imsystem.domain.Standard" >
    insert into standard (id, name, tid, 
      time, updatetime, uid, 
      state, column1, column2, 
      column3, column4, column5
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{tid,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{uid,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR}, 
      #{column3,jdbcType=VARCHAR}, #{column4,jdbcType=VARCHAR}, #{column5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imsystem.domain.Standard" >
    insert into standard
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="column1 != null" >
        column1,
      </if>
      <if test="column2 != null" >
        column2,
      </if>
      <if test="column3 != null" >
        column3,
      </if>
      <if test="column4 != null" >
        column4,
      </if>
      <if test="column5 != null" >
        column5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        #{column3,jdbcType=VARCHAR},
      </if>
      <if test="column4 != null" >
        #{column4,jdbcType=VARCHAR},
      </if>
      <if test="column5 != null" >
        #{column5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imsystem.domain.StandardExample" resultType="java.lang.Integer" >
    select count(*) from standard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update standard
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.column1 != null" >
        column1 = #{record.column1,jdbcType=VARCHAR},
      </if>
      <if test="record.column2 != null" >
        column2 = #{record.column2,jdbcType=VARCHAR},
      </if>
      <if test="record.column3 != null" >
        column3 = #{record.column3,jdbcType=VARCHAR},
      </if>
      <if test="record.column4 != null" >
        column4 = #{record.column4,jdbcType=VARCHAR},
      </if>
      <if test="record.column5 != null" >
        column5 = #{record.column5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update standard
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      tid = #{record.tid,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      uid = #{record.uid,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      column1 = #{record.column1,jdbcType=VARCHAR},
      column2 = #{record.column2,jdbcType=VARCHAR},
      column3 = #{record.column3,jdbcType=VARCHAR},
      column4 = #{record.column4,jdbcType=VARCHAR},
      column5 = #{record.column5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imsystem.domain.Standard" >
    update standard
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        column1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column2 = #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        column3 = #{column3,jdbcType=VARCHAR},
      </if>
      <if test="column4 != null" >
        column4 = #{column4,jdbcType=VARCHAR},
      </if>
      <if test="column5 != null" >
        column5 = #{column5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imsystem.domain.Standard" >
    update standard
    set name = #{name,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR},
      column3 = #{column3,jdbcType=VARCHAR},
      column4 = #{column4,jdbcType=VARCHAR},
      column5 = #{column5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>