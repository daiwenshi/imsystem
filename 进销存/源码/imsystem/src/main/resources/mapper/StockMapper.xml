<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imsystem.mapper.StockMapper">
	<resultMap id="BaseResultMap"
		type="com.imsystem.domain.Stock">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="cid" property="cid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="sid" property="sid" jdbcType="VARCHAR" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="updatetime" property="updatetime"
			jdbcType="TIMESTAMP" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="storeid" property="storeid" jdbcType="VARCHAR" />
		<result column="column1" property="column1" jdbcType="VARCHAR" />
		<result column="column2" property="column2" jdbcType="VARCHAR" />
		<result column="column3" property="column3" jdbcType="VARCHAR" />
		<result column="column4" property="column4" jdbcType="VARCHAR" />
		<result column="column5" property="column5" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap type="com.imsystem.domain.Customer"
		id="queryCustomerByNameMap">

		<id property="id" column="id" />
		<result property="img" column="img" />
		<result property="name" column="name" />
		<result property="telephone" column="telephone" />
		<result property="column1" column="leven" />

	</resultMap>
	
	<select id="queryCustomerByName"
		resultMap="queryCustomerByNameMap">

		SELECT c.id,c.img,c.name,c.telephone,(SELECT l.name FROM
		`customerlevel` AS
		l WHERE l.id = c.lid) AS leven FROM customer AS c
		WHERE c.storeid = #{storeid}
		AND c.name LIKE concat('%',#{name},'%')

	</select>

	<update id="updatePrice">
		UPDATE stock AS a
		SET a.`column1` = (SELECT SUM(s)
		FROM (
		SELECT
		SUM(s.count-s.scount)*s.price AS s FROM stockdetails AS s
		WHERE s.sid =
		#{id}
		GROUP BY id)
		AS ss) WHERE a.id = #{id}
	</update>
	<insert id="add">
		insert into
		stock(id,code,time,updatetime,uid,state,storeid,column1,column2)
		values(#{id},#{code},#{time},#{time},#{uid},1,#{column1},0,0)
	</insert>
	<resultMap type="com.imsystem.domain.Stock" id="queryStock"
		extends="BaseResultMap">
		<collection property="stockdetails"
			ofType="com.imsystem.domain.Stockdetails">
			<id property="id" column="sdid" />
			<result property="code" column="sdcode" />
			<result property="gvid" column="sdgvid" />
			<result property="sid" column="sdsid" />
			<result property="updatetime" column="sdupdatetime" />
			<result property="count" column="sdcount" />
			<result property="scount" column="sdscount" />
			<result property="uid" column="sduid" />
			<result property="price" column="sdprice" />
			<result property="state" column="sdstate" />
			<result property="storeid" column="sdstoreid" />
			<result property="column2" column="sdcolumn2" />
			<collection property="goods"
				javaType="com.imsystem.domain.Goods">
				<id column="goodid" property="id" />
				<result column="goodname" property="name" />
				<result column="goodimg" property="img" />
				<collection property="goodsValues"
					ofType="com.imsystem.domain.Goodsvalue">
					<id column="gvid" property="id" />
					<result column="gvname" property="name" />
					<result column="gvcolumn1" property="column1" />
				</collection>
			</collection>
		</collection>
	</resultMap>
	<update id="updateState">
		update stock set state = 2 where code = #{code}
	</update>
	<select id="querydetails" resultMap="queryStock">
		SELECT s.*,sd.id as
		sdid,sd.uid as sduid,sd.price as sdprice,sd.state as
		sdstate,sd.storeid as sdstoreid,sd.code as ascode,sd.gvid as
		sdgvid,sd.sid as sdsid,
		sd.updatetime as sdupdatetime,sd.count as
		sdcount,sd.scount as sdscount,
		sd.count-sd.scount as 'sdcolumn2',g.id
		as gooodid,g.name as goodname,
		g.img as goodimg,gv.id as gvid,gv.name
		as gvname,gv.column1 as
		gvcolumn1
		FROM stock as s
		inner
		join`stockdetails` AS sd on sd.sid = s.id
		LEFT JOIN `goodsvalue` AS gv
		ON gv.id = sd.gvid
		INNER JOIN `goods` AS g ON gv.gid = g.id
		WHERE
		s.`code` = #{code}
	</select>

	<select id="query" resultMap="BaseResultMap">
		SELECT s.* FROM stock AS s
		inner join stockdetails as sk on s.id =
		sk.sid
		inner join goodsvalue as gv on gv.id = sk.gvid
		inner join goods
		as g on g.id = gv.gid
		<where>
			<if test="code != null">
				and s.code like concat('%',#{code},'%')
			</if>
			<if test="shappingname != null">
				and g.name like concat('%',#{shappingname},'%')
			</if>
			<if test="time != null and time != ''">
				and s.`updatetime` >= #{time} AND s.`updatetime` &lt;=
				#{endTime}
			</if>
			<if test="kucun == 2">
				and s.state = #{kucun}
			</if>
			<if test="kucun == null or kucun == ''">
				and s.state != 2
			</if>
			<if test="true">
				and s.storeid = #{storeid}
			</if>
		</where>
		group by s.id
		<if test="order == 0">
			order by s.`updatetime`
		</if>
		<if test="order == 1">
			order by s.`updatetime` desc
		</if>


	</select>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, cid, code, sid, time, updatetime, uid, state, storeid,
		column1,
		column2, column3,
		column4, column5
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.imsystem.domain.StockExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from stock
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from stock
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from stock
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.imsystem.domain.StockExample">
		delete from stock
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.imsystem.domain.Stock">
		insert into stock (id, cid,
		code,
		sid, time, updatetime,
		uid, state, storeid,
		column1, column2,
		column3,
		column4, column5)
		values (#{id,jdbcType=VARCHAR},
		#{cid,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{sid,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP},
		#{uid,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER},
		#{storeid,jdbcType=VARCHAR},
		#{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR},
		#{column3,jdbcType=VARCHAR},
		#{column4,jdbcType=VARCHAR},
		#{column5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.imsystem.domain.Stock">
		insert into stock
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="sid != null">
				sid,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="time != null">
				updatetime,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="storeid != null">
				storeid,
			</if>
			<if test="column1 != null">
				column1,
			</if>
			<if test="column2 != null">
				column2,
			</if>
			<if test="column3 != null">
				column3,
			</if>
			<if test="column4 != null">
				column4,
			</if>
			<if test="column5 != null">
				column5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				#{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				#{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				#{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				#{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				#{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				#{column5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.imsystem.domain.StockExample"
		resultType="java.lang.Integer">
		select count(*) from stock
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update stock
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.sid != null">
				sid = #{record.sid,jdbcType=VARCHAR},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.storeid != null">
				storeid = #{record.storeid,jdbcType=VARCHAR},
			</if>
			<if test="record.column1 != null">
				column1 = #{record.column1,jdbcType=VARCHAR},
			</if>
			<if test="record.column2 != null">
				column2 = #{record.column2,jdbcType=VARCHAR},
			</if>
			<if test="record.column3 != null">
				column3 = #{record.column3,jdbcType=VARCHAR},
			</if>
			<if test="record.column4 != null">
				column4 = #{record.column4,jdbcType=VARCHAR},
			</if>
			<if test="record.column5 != null">
				column5 = #{record.column5,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update stock
		set id = #{record.id,jdbcType=VARCHAR},
		cid =
		#{record.cid,jdbcType=VARCHAR},
		code = #{record.code,jdbcType=VARCHAR},
		sid = #{record.sid,jdbcType=VARCHAR},
		time =
		#{record.time,jdbcType=TIMESTAMP},
		updatetime =
		#{record.updatetime,jdbcType=TIMESTAMP},
		uid =
		#{record.uid,jdbcType=VARCHAR},
		state =
		#{record.state,jdbcType=INTEGER},
		storeid =
		#{record.storeid,jdbcType=VARCHAR},
		column1 =
		#{record.column1,jdbcType=VARCHAR},
		column2 =
		#{record.column2,jdbcType=VARCHAR},
		column3 =
		#{record.column3,jdbcType=VARCHAR},
		column4 =
		#{record.column4,jdbcType=VARCHAR},
		column5 =
		#{record.column5,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.imsystem.domain.Stock">
		update stock
		<set>
			<if test="cid != null">
				cid = #{cid,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				sid = #{sid,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				storeid = #{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				column1 = #{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				column2 = #{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				column3 = #{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				column4 = #{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				column5 = #{column5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.imsystem.domain.Stock">
		update stock
		set cid = #{cid,jdbcType=VARCHAR},
		code =
		#{code,jdbcType=VARCHAR},
		sid = #{sid,jdbcType=VARCHAR},
		time =
		#{time,jdbcType=TIMESTAMP},
		updatetime =
		#{updatetime,jdbcType=TIMESTAMP},
		uid = #{uid,jdbcType=VARCHAR},
		state =
		#{state,jdbcType=INTEGER},
		storeid = #{storeid,jdbcType=VARCHAR},
		column1 = #{column1,jdbcType=VARCHAR},
		column2 =
		#{column2,jdbcType=VARCHAR},
		column3 = #{column3,jdbcType=VARCHAR},
		column4 = #{column4,jdbcType=VARCHAR},
		column5 =
		#{column5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="queryQianKuan" resultMap="BaseResultMap">
		SELECT s.column1 AS column1, s.column2 AS column2, su.name AS column3,
		s.sid AS sid, s.id AS id, su.balance AS column4,s.time AS column5 FROM
		stock AS s JOIN
		supplier AS su ON su.id = s.sid WHERE s.state = '0' AND
		s.column1 - s.column2
		> 0
		<if test="sid != null and sid != ''">
			AND s.sid = #{sid}
		</if>
		<if
			test="startTime != null and startTime !='' and endTime != null and endTime != ''">
			AND s.TIME >= DATE_FORMAT(#{startTime},'%Y-%m-%d 00:00:00') AND
			s.TIME
			&lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')
		</if>
	</select>
</mapper>