<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imsystem.mapper.GoodstypeMapper" >
  <resultMap id="BaseResultMap" type="com.imsystem.domain.Goodstype" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="column1" property="column1" jdbcType="VARCHAR" />
    <result column="column2" property="column2" jdbcType="VARCHAR" />
    <result column="column3" property="column3" jdbcType="VARCHAR" />
    <result column="column4" property="column4" jdbcType="VARCHAR" />
    <result column="column5" property="column5" jdbcType="VARCHAR" />
    
  </resultMap>
  
  
  <resultMap type="com.imsystem.domain.Goodstype" id="BaseResultMap2" extends="BaseResultMap">
  
    <association property="goodstype"  javaType="com.imsystem.domain.Goodstype" column="pid" select="queryGoodsTypeReverse">
    	
    </association>
  
  </resultMap>
  
  <resultMap type="com.imsystem.domain.Goodstype" id="querybypidresultMap" extends="BaseResultMap">
  	<collection property="list2" column="id" select="querybyid1" ofType="com.imsystem.domain.Goodstype" ></collection>
  </resultMap>
  
  <select id="querybyid1" resultType="com.imsystem.domain.Goodstype">
    	SELECT g1.*,g2.name AS pname,u.`name` AS uname FROM `goodstype` AS g1 LEFT JOIN `goodstype` AS g2 ON g1.`pid` = g2.id INNER JOIN USER AS u ON g1.uid=u.`id` WHERE g1.pid=#{id} and g1.state=0
    </select>
  
 <select id="querygoodstype" resultMap="BaseResultMap">
  	SELECT g1.*,g2.name AS pname,u.`name` AS uname FROM `goodstype` AS g1 LEFT JOIN `goodstype` AS g2 ON g1.`pid` = g2.id INNER JOIN USER AS u ON g1.uid=u.`id`
  	<where>
  		g1.state=0
  		<if test="tiaojian!=null">
  				and ( g1.NAME LIKE concat('%',#{tiaojian},'%') OR g2.name LIKE concat('%',#{tiaojian},'%') OR u.name LIKE concat('%',#{tiaojian},'%'))
  		</if>
  		
  	</where>
  </select>
  
  <delete id="deleteupdate">
  	UPDATE goodstype SET state=1 WHERE id=#{id}
  </delete>
  
  <insert id="insertgoodstype" parameterType="com.imsystem.domain.Bit" >
  	INSERT INTO goodstype(id,NAME,pid,TIME,updatetime,uid,state) VALUE(#{id},#{name},#{pid},NOW(),NOW(),#{uid},0)
  </insert>
  
  <select id="querybyid" resultMap="BaseResultMap">
  	SELECT * FROM goodstype WHERE id=#{id}
  </select>
  
  <select id="querynoid" resultMap="BaseResultMap">
  	SELECT * FROM goodstype WHERE pid !=0 and state = 0
  </select>
  
  <select id="querybyname" resultMap="BaseResultMap">
  	SELECT * FROM goodstype WHERE NAME=#{name} AND pid=#{pid}
  </select>
  
  <select id="querybypid" resultMap="querybypidresultMap">
  	SELECT * FROM goodstype 
  	<where>
  		and pid=0
  		and state=0
  		<if test="name!=null and name!=''">
  			and name like concat('%',#{name},'%')
  		</if>
  	</where>
  </select>
  
    
  
  <update id="toupdate" parameterType="map" >
  	UPDATE goodstype set NAME=#{name},pid=#{pid},updatetime=NOW(),uid=#{uid} WHERE id=#{id}
  </update>
  
  <update id="dele">
  	UPDATE `goodstype` SET state="1" WHERE id=#{id} OR pid=#{id}
  </update>
  
  
  <select id="queryGoodsTypeReverse" resultMap="BaseResultMap2">
  	SELECT * FROM `goodstype`
	WHERE id = #{id}
  </select>
  
  <select id="queryGoodsTypeReverseList" resultMap="BaseResultMap2">
	SELECT * FROM `goodstype`
	WHERE pid = #{id}
  </select>
  
  
  <select id="QueryGoodsTypeByPid" resultMap="BaseResultMap2">
  <!-- 商品类型查询 -->
  	SELECT * FROM `goodstype`
	WHERE pid = #{id}
  
  </select>
  
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="queryall" resultMap="BaseResultMap" >
   SELECT * FROM goodstype WHERE state=0
  </select>
  
  <sql id="Base_Column_List" >
    id, name, pid, time, updatetime, uid, state, column1, column2, column3, column4, 
    column5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imsystem.domain.GoodstypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goodstype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goodstype
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goodstype
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.imsystem.domain.GoodstypeExample" >
    delete from goodstype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertselete" parameterType="com.imsystem.domain.Goodstype" >
    insert into goodstype (id, name, pid, 
      time, updatetime, uid, 
      state, column1, column2, 
      column3, column4, column5
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{uid,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR}, 
      #{column3,jdbcType=VARCHAR}, #{column4,jdbcType=VARCHAR}, #{column5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imsystem.domain.Goodstype" >
    insert into goodstype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="column1 != null" >
        column1,
      </if>
      <if test="column2 != null" >
        column2,
      </if>
      <if test="column3 != null" >
        column3,
      </if>
      <if test="column4 != null" >
        column4,
      </if>
      <if test="column5 != null" >
        column5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        #{column3,jdbcType=VARCHAR},
      </if>
      <if test="column4 != null" >
        #{column4,jdbcType=VARCHAR},
      </if>
      <if test="column5 != null" >
        #{column5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imsystem.domain.GoodstypeExample" resultType="java.lang.Integer" >
    select count(*) from goodstype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goodstype
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.column1 != null" >
        column1 = #{record.column1,jdbcType=VARCHAR},
      </if>
      <if test="record.column2 != null" >
        column2 = #{record.column2,jdbcType=VARCHAR},
      </if>
      <if test="record.column3 != null" >
        column3 = #{record.column3,jdbcType=VARCHAR},
      </if>
      <if test="record.column4 != null" >
        column4 = #{record.column4,jdbcType=VARCHAR},
      </if>
      <if test="record.column5 != null" >
        column5 = #{record.column5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goodstype
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      uid = #{record.uid,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      column1 = #{record.column1,jdbcType=VARCHAR},
      column2 = #{record.column2,jdbcType=VARCHAR},
      column3 = #{record.column3,jdbcType=VARCHAR},
      column4 = #{record.column4,jdbcType=VARCHAR},
      column5 = #{record.column5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imsystem.domain.Goodstype" >
    update goodstype
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="column1 != null" >
        column1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column2 = #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        column3 = #{column3,jdbcType=VARCHAR},
      </if>
      <if test="column4 != null" >
        column4 = #{column4,jdbcType=VARCHAR},
      </if>
      <if test="column5 != null" >
        column5 = #{column5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imsystem.domain.Goodstype" >
    update goodstype
    set name = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      column1 = #{column1,jdbcType=VARCHAR},
      column2 = #{column2,jdbcType=VARCHAR},
      column3 = #{column3,jdbcType=VARCHAR},
      column4 = #{column4,jdbcType=VARCHAR},
      column5 = #{column5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>