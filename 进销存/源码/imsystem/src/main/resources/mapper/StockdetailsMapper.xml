<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.imsystem.mapper.StockdetailsMapper">
	<resultMap id="BaseResultMap"
		type="com.imsystem.domain.Stockdetails">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="gvid" property="gvid" jdbcType="VARCHAR" />
		<result column="sid" property="sid" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="scount" property="scount" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="time" property="time" jdbcType="TIMESTAMP" />
		<result column="updatetime" property="updatetime"
			jdbcType="TIMESTAMP" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="storeid" property="storeid" jdbcType="VARCHAR" />
		<result column="column1" property="column1" jdbcType="VARCHAR" />
		<result column="column2" property="column2" jdbcType="VARCHAR" />
		<result column="column3" property="column3" jdbcType="VARCHAR" />
		<result column="column4" property="column4" jdbcType="VARCHAR" />
		<result column="column5" property="column5" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="querydetailsSumPrice" resultType="Double">
		
		SELECT SUM(s)  FROM (SELECT SUM(s.count-s.scount)*s.price AS s FROM stockdetails AS s WHERE s.sid = #{id} GROUP BY id) AS ss
	
	</select>
	
	<update id="updateDetails">
		
		update stockdetails set scount = #{scount} - #{count} where id = #{id}
		
	</update>
	<resultMap type="com.imsystem.domain.Stockdetails"
		id="queryGoodsMap" extends="BaseResultMap">
		<association property="goodsvalue"
			javaType="com.imsystem.domain.Goodsvalue">
			<id property="id" column="gvid" />
			<result property="name" column="gvname" />
			<result property="column1" column="gvcolumn1" />
			<association property="goods"
				javaType="com.imsystem.domain.Goods">
				<id property="name" column="gname" />
				<result property="img" column="img" />
			</association>
		</association>
	</resultMap>
	<update id="updateScount">
		update stockdetails set state = 0,scount = scount-#{count} where id = #{id};
	</update>
	<update id="update">
		update stockdetails set state = 1 where id = #{id}
	</update>
	<select id="queryDetails" resultMap="BaseResultMap">
		select * from stockdetails
		as s where s.gvid = #{gvid} and s.storeid =
		#{storeid} and s.state =
		'0'
	</select>
	<select id="queryGoods" resultMap="queryGoodsMap">
		SELECT SUM(s.count-s.scount)
		AS 'COUNT',s.price as sprice,g.name as
		gname,gv.name AS
		gvname,g.img,gv.column1 AS gvcolumn1,gv.id as gvid
		FROM `stockdetails`
		AS s
		INNER JOIN `goodsvalue` AS gv ON gv.id = s.gvid
		INNER JOIN goods AS
		g ON gv.gid = g.id
		where g.name like concat('%',#{name},'%')
		and
		s.storeid = #{storeid}
		GROUP BY s.gvid
	</select>
	<select id="queryCount" resultMap="BaseResultMap">
		SELECT s.count-s.scount AS
		COUNT,s.id,s.code,s.storeid FROM stockdetails AS s
		WHERE gvid = '1558074897558' AND (s.storeid = 1 OR s.storeid IS NULL) AND (s.count-s.scount) > 0
		ORDER BY
		s.updatetime 
		LIMIT 1
	</select>
	<select id="selectCount" resultType="Integer">
		SELECT SUM(s.count-s.scount)
		FROM stockdetails AS s WHERE s.CODE = #{code} and s.storeid = #{sid}
	</select>

	<select id="count" parameterType="Integer">
		select count from stockDetails
		where id = #{id} and gvid = #{gvid}
	</select>

	<update id="updateCount">
		update stockdetails set scount=scount+#{count} where
		code = #{code} and gvid
		= #{gvid}
	</update>
	<delete id="del">
		delete from stockdetails where `code` = #{code}
	</delete>
	<insert id="addAllot">
		insert into
		stockdetails(id,code,gvid,sid,count,scount,price,time,updatetime,uid,state)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.id},#{code},#{item.gvid},#{id},#{item.count},0,#{item.price},#{time},#{time},'1','0')
		</foreach>
	</insert>
	<insert id="add">
		insert into
		stockdetails(id,code,gvid,sid,count,scount,price,time,updatetime,uid,state,storeid)
		values
		<foreach collection="stockdetails" item="item" separator=",">
			(#{item.id},#{code},#{item.gvid},#{id},#{item.count},#{item.scount},#{item.price},#{item.time},#{item.time},'1','0',#{storeid})
		</foreach>
	</insert>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, code, gvid, sid, count, scount, price, time,
		updatetime, uid, state,
		storeid,
		column1, column2, column3, column4,
		column5
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.imsystem.domain.StockdetailsExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from stockdetails
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from stockdetails
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		stockdetails
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.imsystem.domain.StockdetailsExample">
		delete from stockdetails
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.imsystem.domain.Stockdetails">
		insert into stockdetails (id, code, gvid,
		sid, count,
		scount,
		price, time, updatetime,
		uid, state, storeid,
		column1, column2,
		column3,
		column4, column5)
		values (#{id,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{gvid,jdbcType=VARCHAR},
		#{sid,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
		#{scount,jdbcType=INTEGER},
		#{price,jdbcType=DOUBLE},
		#{time,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP},
		#{uid,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
		#{storeid,jdbcType=VARCHAR},
		#{column1,jdbcType=VARCHAR},
		#{column2,jdbcType=VARCHAR},
		#{column3,jdbcType=VARCHAR},
		#{column4,jdbcType=VARCHAR}, #{column5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.imsystem.domain.Stockdetails">
		insert into stockdetails
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="gvid != null">
				gvid,
			</if>
			<if test="sid != null">
				sid,
			</if>
			<if test="count != null">
				count,
			</if>
			<if test="scount != null">
				scount,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="updatetime != null">
				updatetime,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="storeid != null">
				storeid,
			</if>
			<if test="column1 != null">
				column1,
			</if>
			<if test="column2 != null">
				column2,
			</if>
			<if test="column3 != null">
				column3,
			</if>
			<if test="column4 != null">
				column4,
			</if>
			<if test="column5 != null">
				column5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="gvid != null">
				#{gvid,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				#{count,jdbcType=INTEGER},
			</if>
			<if test="scount != null">
				#{scount,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				#{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				#{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				#{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				#{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				#{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				#{column5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.imsystem.domain.StockdetailsExample"
		resultType="java.lang.Integer">
		select count(*) from stockdetails
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update stockdetails
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				code = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.gvid != null">
				gvid = #{record.gvid,jdbcType=VARCHAR},
			</if>
			<if test="record.sid != null">
				sid = #{record.sid,jdbcType=VARCHAR},
			</if>
			<if test="record.count != null">
				count = #{record.count,jdbcType=INTEGER},
			</if>
			<if test="record.scount != null">
				scount = #{record.scount,jdbcType=INTEGER},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.storeid != null">
				storeid = #{record.storeid,jdbcType=VARCHAR},
			</if>
			<if test="record.column1 != null">
				column1 = #{record.column1,jdbcType=VARCHAR},
			</if>
			<if test="record.column2 != null">
				column2 = #{record.column2,jdbcType=VARCHAR},
			</if>
			<if test="record.column3 != null">
				column3 = #{record.column3,jdbcType=VARCHAR},
			</if>
			<if test="record.column4 != null">
				column4 = #{record.column4,jdbcType=VARCHAR},
			</if>
			<if test="record.column5 != null">
				column5 = #{record.column5,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update stockdetails
		set id = #{record.id,jdbcType=VARCHAR},
		code =
		#{record.code,jdbcType=VARCHAR},
		gvid =
		#{record.gvid,jdbcType=VARCHAR},
		sid = #{record.sid,jdbcType=VARCHAR},
		count = #{record.count,jdbcType=INTEGER},
		scount =
		#{record.scount,jdbcType=INTEGER},
		price =
		#{record.price,jdbcType=DOUBLE},
		time =
		#{record.time,jdbcType=TIMESTAMP},
		updatetime =
		#{record.updatetime,jdbcType=TIMESTAMP},
		uid =
		#{record.uid,jdbcType=VARCHAR},
		state =
		#{record.state,jdbcType=INTEGER},
		storeid =
		#{record.storeid,jdbcType=VARCHAR},
		column1 =
		#{record.column1,jdbcType=VARCHAR},
		column2 =
		#{record.column2,jdbcType=VARCHAR},
		column3 =
		#{record.column3,jdbcType=VARCHAR},
		column4 =
		#{record.column4,jdbcType=VARCHAR},
		column5 =
		#{record.column5,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.imsystem.domain.Stockdetails">
		update stockdetails
		<set>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="gvid != null">
				gvid = #{gvid,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				sid = #{sid,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				count = #{count,jdbcType=INTEGER},
			</if>
			<if test="scount != null">
				scount = #{scount,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="storeid != null">
				storeid = #{storeid,jdbcType=VARCHAR},
			</if>
			<if test="column1 != null">
				column1 = #{column1,jdbcType=VARCHAR},
			</if>
			<if test="column2 != null">
				column2 = #{column2,jdbcType=VARCHAR},
			</if>
			<if test="column3 != null">
				column3 = #{column3,jdbcType=VARCHAR},
			</if>
			<if test="column4 != null">
				column4 = #{column4,jdbcType=VARCHAR},
			</if>
			<if test="column5 != null">
				column5 = #{column5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.imsystem.domain.Stockdetails">
		update stockdetails
		set code = #{code,jdbcType=VARCHAR},
		gvid = #{gvid,jdbcType=VARCHAR},
		sid = #{sid,jdbcType=VARCHAR},
		count =
		#{count,jdbcType=INTEGER},
		scount = #{scount,jdbcType=INTEGER},
		price =
		#{price,jdbcType=DOUBLE},
		time = #{time,jdbcType=TIMESTAMP},
		updatetime
		= #{updatetime,jdbcType=TIMESTAMP},
		uid = #{uid,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		storeid =
		#{storeid,jdbcType=VARCHAR},
		column1 = #{column1,jdbcType=VARCHAR},
		column2 = #{column2,jdbcType=VARCHAR},
		column3 =
		#{column3,jdbcType=VARCHAR},
		column4 = #{column4,jdbcType=VARCHAR},
		column5 = #{column5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="queryJinHuo" resultMap="BaseResultMap">
		SELECT sd.count AS `count`, sd.price AS price , g.name AS gvid ,
		gv.name AS column4 , g.jprice AS column1, su.name AS column2 , s.time
		AS TIME,s.updateTime AS column3 FROM stockdetails AS sd JOIN stock AS
		s ON s.id = sd.sid JOIN supplier AS su ON su.id = s.sid JOIN
		goodsvalue AS gv ON gv.id = sd.gvid JOIN goods AS g ON g.id = gv.gid
		WHERE s.state = '0'
		<if test="cid != null and cid != ''">
			and s.sid = #{cid}
		</if>
		<if
			test="startTime != null and startTime !='' and endTime != null and endTime != ''">
			AND s.TIME >= DATE_FORMAT(#{startTime},'%Y-%m-%d 00:00:00') AND s.TIME
			&lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d 23:59:59')
		</if>
		<if test="storeId != null and storeId != ''">
			and s.storeid = #{storeId}
		</if>
	</select>
	<select id="queryStockByGidAndStoreId" resultMap="BaseResultMap">
		SELECT g.minsecurity AS column1, sd.count AS `count`, g.name AS
		column2, gv.name AS column3,g.maxsecurity AS column4 , sd.count *
		gv.jprice AS column5 FROM stockdetails AS sd JOIN goodsvalue AS gv ON
		gv.id = sd.gvid JOIN goods AS g ON g.id = gv.gid WHERE sd.state = '0'
		<if test="gid != null and gid != ''">
			AND gv.id = #{gid}
		</if>
		<if test="storeId != null and storeId != ''">
			AND sd.storeid = #{storeId}
		</if>
		<if test="name != null and name != ''">
			AND gv.name LIKE concat('%',#{name},'%') OR g.name LIKE concat('%',#{name},'%')
		</if>
	</select>
</mapper>